{"ast":null,"code":"var _jsxFileName = \"/var/www/html/weatherapp/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nconst api = {\n  key: \"73bbca9d4c12b5ab2462b9569a56b2d5\",\n  base: \"http://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  const [query, setquery] = useState('');\n  const [weather, setweather] = useState('');\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setweather(result);\n        setquery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? 'app warm' : 'app' : 'app',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"searchBar\",\n    placeholder: \"Search...\",\n    onChange: e => setquery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"locationContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, weather.name, \",\", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, dateBuilder(new Date())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, Math.round(weather.main.temp), \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, weather.weather[0].main)))) : ''));\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/weatherapp/src/App.js"],"names":["React","useState","api","key","base","App","query","setquery","weather","setweather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst api = {\n    key: \"73bbca9d4c12b5ab2462b9569a56b2d5\",\n    base: \"http://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n    const [query, setquery] = useState('');\n    const [weather, setweather] = useState('');\n\n    const search = evt => {\n        if (evt.key === \"Enter\") {\n            fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n                .then(res => res.json())\n                .then(result => {\n                    setweather(result);\n                    setquery('');\n                    console.log(result)\n                });\n        }\n    }\n\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`\n    }\n\n\n    return (\n        <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n            <main>\n                <div className=\"searchBox\">\n                    <input\n                        type=\"text\"\n                        className=\"searchBar\"\n                        placeholder=\"Search...\"\n                        onChange={e => setquery(e.target.value)}\n                        value={query}\n                        onKeyPress={search}\n                    />\n                </div>\n                {(typeof weather.main != \"undefined\") ? (\n                    <div>\n                        <div className=\"locationContainer\">\n                            <div className=\"location\">\n                                {weather.name},{weather.sys.country}\n                            </div>\n                            <div className=\"date\">\n                                {dateBuilder(new Date())}\n                            </div>\n                            <div className=\"weatherBox\">\n                                <div className=\"temp\">\n                                    {Math.round(weather.main.temp)}&#176;\n                                </div>\n                                <div className=\"weather\">\n                                    {weather.weather[0].main}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : ('')}\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}